package space.davids_digital

import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.BeforeAll
import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.TestInstance
import org.mockito.Mockito.`when`
import org.mockito.Mockito.mock
import kotlin.Double.Companion.NEGATIVE_INFINITY
import kotlin.Double.Companion.NaN
import kotlin.Double.Companion.POSITIVE_INFINITY
import kotlin.math.*

//fun main() {
//    val asymptotesPeriodic = arrayOf(0.0, -2/PI, -PI,  -3/2*PI)
//    val extremesPeriodic = arrayOf(-0.717,-1.867,-2.363,-2.637,-5.151,-5.507,-5.685,-5.797,-5.801)
//    val zeroesPeriodic = arrayOf(-1.864,-2.643,-3.72,-5.145,-5.801)
//    val simplePointsPeriodic = arrayOf(-0.635, -0.8, -1.8627, -1.8651, -1.8752, -2.6, -2.6416, -2.647, -3.707, -3.739, -5.142, -5.147, -5.165, -5.6, -5.732, -5.796, -5.8, -5.804)
//    val extremes = arrayOf(0.401)
//    val zeroes = arrayOf(0.307, 1.0)
//    val simplePoints = arrayOf(0.28, 0.327, 0.6, 1.6)
//    val format = { x: Double -> String.format("%.16f", x).replace("Infinity", "POSITIVE_INFINITY") }
//    for (x in (
//            (
//                    (asymptotesPeriodic + extremesPeriodic + zeroesPeriodic).map { x -> listOf(x, x - DELTA, x + DELTA) }.flatten()
//                            + simplePointsPeriodic
//                    ).map { x -> listOf(x, x - PERIOD) }.flatten()
//            ).sortedDescending().distinct()
//    ) {
//        println("`when`(mathMock.sin(${format(x)})).thenReturn(${format(sin(x))})")
//        println("`when`(mathMock.cos(${format(x)})).thenReturn(${format(cos(x))})")
//        println("`when`(mathMock.tan(${format(x)})).thenReturn(${format(tan(x))})")
//        println("`when`(mathMock.cot(${format(x)})).thenReturn(${format(1/tan(x))})")
//        println("`when`(mathMock.sec(${format(x)})).thenReturn(${format(1/cos(x))})")
//        println("`when`(mathMock.csc(${format(x)})).thenReturn(${format(1/sin(x))})")
//    }
//    for (x in ((extremes + zeroes).map { x -> listOf(x, x - DELTA, x + DELTA) }.flatten() + simplePoints).sortedDescending()) {
//        println("`when`(mathMock.log(${format(x)})).thenReturn(${format(log(x, E))})")
//        println("`when`(mathMock.log2(${format(x)})).thenReturn(${format(log(x, 2.0))})")
//        println("`when`(mathMock.log3(${format(x)})).thenReturn(${format(log(x, 3.0))})")
//        println("`when`(mathMock.log5(${format(x)})).thenReturn(${format(log(x, 5.0))})")
//        println("`when`(mathMock.log10(${format(x)})).thenReturn(${format(log(x, 10.0))})")
//    }
//}

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
class ScrapSolverTest {
    companion object {
        const val NEIGHBORHOOD_DELTA = 0.0000001
        const val MAX_ERROR = 0.000001
        const val PERIOD = 2*PI
    }

    private lateinit var mathMock: ScrapMath
    private lateinit var solver: ScrapSolver

    @BeforeAll
    fun initMock() {
        mathMock = mock(ScrapMath::class.java)
        `when`(mathMock.sin(0.0000001000000000)).thenReturn(0.0000001000000000)
        `when`(mathMock.cos(0.0000001000000000)).thenReturn(0.9999999999999950)
        `when`(mathMock.tan(0.0000001000000000)).thenReturn(0.0000001000000000)
        `when`(mathMock.cot(0.0000001000000000)).thenReturn(9999999.9999999660000000)
        `when`(mathMock.sec(0.0000001000000000)).thenReturn(1.0000000000000050)
        `when`(mathMock.csc(0.0000001000000000)).thenReturn(10000000.0000000170000000)
        `when`(mathMock.sin(0.0000000000000000)).thenReturn(0.0000000000000000)
        `when`(mathMock.cos(0.0000000000000000)).thenReturn(1.0000000000000000)
        `when`(mathMock.tan(0.0000000000000000)).thenReturn(0.0000000000000000)
        `when`(mathMock.cot(0.0000000000000000)).thenReturn(POSITIVE_INFINITY)
        `when`(mathMock.sec(0.0000000000000000)).thenReturn(1.0000000000000000)
        `when`(mathMock.csc(0.0000000000000000)).thenReturn(POSITIVE_INFINITY)
        `when`(mathMock.sin(-0.0000001000000000)).thenReturn(-0.0000001000000000)
        `when`(mathMock.cos(-0.0000001000000000)).thenReturn(0.9999999999999950)
        `when`(mathMock.tan(-0.0000001000000000)).thenReturn(-0.0000001000000000)
        `when`(mathMock.cot(-0.0000001000000000)).thenReturn(-9999999.9999999660000000)
        `when`(mathMock.sec(-0.0000001000000000)).thenReturn(1.0000000000000050)
        `when`(mathMock.csc(-0.0000001000000000)).thenReturn(-10000000.0000000170000000)
        `when`(mathMock.sin(-0.6350000000000000)).thenReturn(-0.5931775143558129)
        `when`(mathMock.cos(-0.6350000000000000)).thenReturn(0.8050716964734628)
        `when`(mathMock.tan(-0.6350000000000000)).thenReturn(-0.7368008550718756)
        `when`(mathMock.cot(-0.6350000000000000)).thenReturn(-1.3572188375140377)
        `when`(mathMock.sec(-0.6350000000000000)).thenReturn(1.2421253962602354)
        `when`(mathMock.csc(-0.6350000000000000)).thenReturn(-1.6858359863589802)
        `when`(mathMock.sin(-0.6366196723675814)).thenReturn(-0.5944806881138364)
        `when`(mathMock.cos(-0.6366196723675814)).thenReturn(0.8041098876768645)
        `when`(mathMock.tan(-0.6366196723675814)).thenReturn(-0.7393027958297304)
        `when`(mathMock.cot(-0.6366196723675814)).thenReturn(-1.3526257517769635)
        `when`(mathMock.sec(-0.6366196723675814)).thenReturn(1.2436111224662056)
        `when`(mathMock.csc(-0.6366196723675814)).thenReturn(-1.6821404294440450)
        `when`(mathMock.sin(-0.6366197723675814)).thenReturn(-0.5944807685248221)
        `when`(mathMock.cos(-0.6366197723675814)).thenReturn(0.8041098282287917)
        `when`(mathMock.tan(-0.6366197723675814)).thenReturn(-0.7393029504866041)
        `when`(mathMock.cot(-0.6366197723675814)).thenReturn(-1.3526254688173596)
        `when`(mathMock.sec(-0.6366197723675814)).thenReturn(1.2436112144067366)
        `when`(mathMock.csc(-0.6366197723675814)).thenReturn(-1.6821402019134380)
        `when`(mathMock.sin(-0.6366198723675813)).thenReturn(-0.5944808489358019)
        `when`(mathMock.cos(-0.6366198723675813)).thenReturn(0.8041097687807108)
        `when`(mathMock.tan(-0.6366198723675813)).thenReturn(-0.7393031051435007)
        `when`(mathMock.cot(-0.6366198723675813)).thenReturn(-1.3526251858578320)
        `when`(mathMock.sec(-0.6366198723675813)).thenReturn(1.2436113063472936)
        `when`(mathMock.csc(-0.6366198723675813)).thenReturn(-1.6821399743829093)
        `when`(mathMock.sin(-0.7169999000000000)).thenReturn(-0.6571262155603234)
        `when`(mathMock.cos(-0.7169999000000000)).thenReturn(0.7537805627789612)
        `when`(mathMock.tan(-0.7169999000000000)).thenReturn(-0.8717738928391805)
        `when`(mathMock.cot(-0.7169999000000000)).thenReturn(-1.1470864271275831)
        `when`(mathMock.sec(-0.7169999000000000)).thenReturn(1.3266460418046628)
        `when`(mathMock.csc(-0.7169999000000000)).thenReturn(-1.5217776681566606)
        `when`(mathMock.sin(-0.7170000000000000)).thenReturn(-0.6571262909383763)
        `when`(mathMock.cos(-0.7170000000000000)).thenReturn(0.7537804970663360)
        `when`(mathMock.tan(-0.7170000000000000)).thenReturn(-0.8717740688381678)
        `when`(mathMock.cot(-0.7170000000000000)).thenReturn(-1.1470861955468825)
        `when`(mathMock.sec(-0.7170000000000000)).thenReturn(1.3266461574582178)
        `when`(mathMock.csc(-0.7170000000000000)).thenReturn(-1.5217774935956376)
        `when`(mathMock.sin(-0.7170000999999999)).thenReturn(-0.6571263663164226)
        `when`(mathMock.cos(-0.7170000999999999)).thenReturn(0.7537804313537031)
        `when`(mathMock.tan(-0.7170000999999999)).thenReturn(-0.8717742448371857)
        `when`(mathMock.cot(-0.7170000999999999)).thenReturn(-1.1470859639662354)
        `when`(mathMock.sec(-0.7170000999999999)).thenReturn(1.3266462731118063)
        `when`(mathMock.csc(-0.7170000999999999)).thenReturn(-1.5217773190346700)
        `when`(mathMock.sin(-0.8000000000000000)).thenReturn(-0.7173560908995228)
        `when`(mathMock.cos(-0.8000000000000000)).thenReturn(0.6967067093471654)
        `when`(mathMock.tan(-0.8000000000000000)).thenReturn(-1.0296385570503641)
        `when`(mathMock.cot(-0.8000000000000000)).thenReturn(-0.9712146006504743)
        `when`(mathMock.sec(-0.8000000000000000)).thenReturn(1.4353241996722400)
        `when`(mathMock.csc(-0.8000000000000000)).thenReturn(-1.3940078193886360)
        `when`(mathMock.sin(-1.8627000000000000)).thenReturn(-0.9576977799288106)
        `when`(mathMock.cos(-1.8627000000000000)).thenReturn(-0.2877758890515805)
        `when`(mathMock.tan(-1.8627000000000000)).thenReturn(3.3279291850511990)
        `when`(mathMock.cot(-1.8627000000000000)).thenReturn(0.3004871631559719)
        `when`(mathMock.sec(-1.8627000000000000)).thenReturn(-3.4749262813354090)
        `when`(mathMock.csc(-1.8627000000000000)).thenReturn(-1.0441707404546077)
        `when`(mathMock.sin(-1.8639999000000000)).thenReturn(-0.9573228910259678)
        `when`(mathMock.cos(-1.8639999000000000)).thenReturn(-0.2890205569119314)
        `when`(mathMock.tan(-1.8639999000000000)).thenReturn(3.3123003472644945)
        `when`(mathMock.cot(-1.8639999000000000)).thenReturn(0.3019049890285048)
        `when`(mathMock.sec(-1.8639999000000000)).thenReturn(-3.4599615013014944)
        `when`(mathMock.csc(-1.8639999000000000)).thenReturn(-1.0445796390894768)
        `when`(mathMock.sin(-1.8640000000000000)).thenReturn(-0.9573228621239073)
        `when`(mathMock.cos(-1.8640000000000000)).thenReturn(-0.2890206526442191)
        `when`(mathMock.tan(-1.8640000000000000)).thenReturn(3.3122991501315315)
        `when`(mathMock.cot(-1.8640000000000000)).thenReturn(0.3019050981431704)
        `when`(mathMock.sec(-1.8640000000000000)).thenReturn(-3.4599603552587226)
        `when`(mathMock.csc(-1.8640000000000000)).thenReturn(-1.0445796706258634)
        `when`(mathMock.sin(-1.8640001000000002)).thenReturn(-0.9573228332218373)
        `when`(mathMock.cos(-1.8640001000000002)).thenReturn(-0.2890207483765039)
        `when`(mathMock.tan(-1.8640001000000002)).thenReturn(3.3122979529993613)
        `when`(mathMock.cot(-1.8640001000000002)).thenReturn(0.3019052072578426)
        `when`(mathMock.sec(-1.8640001000000002)).thenReturn(-3.4599592092167444)
        `when`(mathMock.csc(-1.8640001000000002)).thenReturn(-1.0445797021622625)
        `when`(mathMock.sin(-1.8651000000000000)).thenReturn(-0.9570043602898399)
        `when`(mathMock.cos(-1.8651000000000000)).thenReturn(-0.2900735327227119)
        `when`(mathMock.tan(-1.8651000000000000)).thenReturn(3.2991784921124220)
        `when`(mathMock.cot(-1.8651000000000000)).thenReturn(0.3031057587186539)
        `when`(mathMock.sec(-1.8651000000000000)).thenReturn(-3.4474017350487590)
        `when`(mathMock.csc(-1.8651000000000000)).thenReturn(-1.0449273185099580)
        `when`(mathMock.sin(-1.8669999000000000)).thenReturn(-0.9564515227060453)
        `when`(mathMock.cos(-1.8669999000000000)).thenReturn(-0.2918912206855274)
        `when`(mathMock.tan(-1.8669999000000000)).thenReturn(3.2767396034034544)
        `when`(mathMock.cot(-1.8669999000000000)).thenReturn(0.3051814062250565)
        `when`(mathMock.sec(-1.8669999000000000)).thenReturn(-3.4259338038719647)
        `when`(mathMock.csc(-1.8669999000000000)).thenReturn(-1.0455312958996028)
        `when`(mathMock.sin(-1.8670000000000000)).thenReturn(-0.9564514935169185)
        `when`(mathMock.cos(-1.8670000000000000)).thenReturn(-0.2918913163306783)
        `when`(mathMock.tan(-1.8670000000000000)).thenReturn(3.2767384297015956)
        `when`(mathMock.cot(-1.8670000000000000)).thenReturn(0.3051815155386289)
        `when`(mathMock.sec(-1.8670000000000000)).thenReturn(-3.4259326812830517)
        `when`(mathMock.csc(-1.8670000000000000)).thenReturn(-1.0455313278072802)
        `when`(mathMock.sin(-1.8670001000000000)).thenReturn(-0.9564514643277820)
        `when`(mathMock.cos(-1.8670001000000000)).thenReturn(-0.2918914119758262)
        `when`(mathMock.tan(-1.8670001000000000)).thenReturn(3.2767372560005060)
        `when`(mathMock.cot(-1.8670001000000000)).thenReturn(0.3051816248522081)
        `when`(mathMock.sec(-1.8670001000000000)).thenReturn(-3.4259315586949084)
        `when`(mathMock.csc(-1.8670001000000000)).thenReturn(-1.0455313597149698)
        `when`(mathMock.sin(-1.8752000000000000)).thenReturn(-0.9540258558271397)
        `when`(mathMock.cos(-1.8752000000000000)).thenReturn(-0.2997243173539538)
        `when`(mathMock.tan(-1.8752000000000000)).thenReturn(3.1830111892472868)
        `when`(mathMock.cot(-1.8752000000000000)).thenReturn(0.3141679185351775)
        `when`(mathMock.sec(-1.8752000000000000)).thenReturn(-3.3363992912829583)
        `when`(mathMock.csc(-1.8752000000000000)).thenReturn(-1.0481896207446084)
        `when`(mathMock.sin(-2.3629999000000000)).thenReturn(-0.7022782926393417)
        `when`(mathMock.cos(-2.3629999000000000)).thenReturn(-0.7119025211976504)
        `when`(mathMock.tan(-2.3629999000000000)).thenReturn(0.9864809741899530)
        `when`(mathMock.cot(-2.3629999000000000)).thenReturn(1.0137042945213900)
        `when`(mathMock.sec(-2.3629999000000000)).thenReturn(-1.4046866954729650)
        `when`(mathMock.csc(-2.3629999000000000)).thenReturn(-1.4239369356580052)
        `when`(mathMock.sin(-2.3630000000000000)).thenReturn(-0.7022782214490862)
        `when`(mathMock.cos(-2.3630000000000000)).thenReturn(-0.7119025914254760)
        `when`(mathMock.tan(-2.3630000000000000)).thenReturn(0.9864807768755015)
        `when`(mathMock.cot(-2.3630000000000000)).thenReturn(1.0137044972810500)
        `when`(mathMock.sec(-2.3630000000000000)).thenReturn(-1.4046865569033160)
        `when`(mathMock.csc(-2.3630000000000000)).thenReturn(-1.4239370800031252)
        `when`(mathMock.sin(-2.3630001000000000)).thenReturn(-0.7022781502588237)
        `when`(mathMock.cos(-2.3630001000000000)).thenReturn(-0.7119026616532944)
        `when`(mathMock.tan(-2.3630001000000000)).thenReturn(0.9864805795610889)
        `when`(mathMock.cot(-2.3630001000000000)).thenReturn(1.0137047000407510)
        `when`(mathMock.sec(-2.3630001000000000)).thenReturn(-1.4046864183337084)
        `when`(mathMock.csc(-2.3630001000000000)).thenReturn(-1.4239372243482890)
        `when`(mathMock.sin(-2.6000000000000000)).thenReturn(-0.5155013718214642)
        `when`(mathMock.cos(-2.6000000000000000)).thenReturn(-0.8568887533689473)
        `when`(mathMock.tan(-2.6000000000000000)).thenReturn(0.6015966130897586)
        `when`(mathMock.cot(-2.6000000000000000)).thenReturn(1.6622434007134268)
        `when`(mathMock.sec(-2.6000000000000000)).thenReturn(-1.1670126326998644)
        `when`(mathMock.csc(-2.6000000000000000)).thenReturn(-1.9398590472545520)
        `when`(mathMock.sin(-2.6369999000000000)).thenReturn(-0.4834509885511531)
        `when`(mathMock.cos(-2.6369999000000000)).thenReturn(-0.8753714306903744)
        `when`(mathMock.tan(-2.6369999000000000)).thenReturn(0.5522809765105910)
        `when`(mathMock.cot(-2.6369999000000000)).thenReturn(1.8106725426578640)
        `when`(mathMock.sec(-2.6369999000000000)).thenReturn(-1.1423722147424156)
        `when`(mathMock.csc(-2.6369999000000000)).thenReturn(-2.0684620027293454)
        `when`(mathMock.sin(-2.6370000000000000)).thenReturn(-0.4834509010140078)
        `when`(mathMock.cos(-2.6370000000000000)).thenReturn(-0.8753714790354687)
        `when`(mathMock.tan(-2.6370000000000000)).thenReturn(0.5522808460091708)
        `when`(mathMock.cot(-2.6370000000000000)).thenReturn(1.8106729705114464)
        `when`(mathMock.sec(-2.6370000000000000)).thenReturn(-1.1423721516513807)
        `when`(mathMock.csc(-2.6370000000000000)).thenReturn(-2.0684623772601585)
        `when`(mathMock.sin(-2.6370001000000000)).thenReturn(-0.4834508134768576)
        `when`(mathMock.cos(-2.6370001000000000)).thenReturn(-0.8753715273805543)
        `when`(mathMock.tan(-2.6370001000000000)).thenReturn(0.5522807155077649)
        `when`(mathMock.cot(-2.6370001000000000)).thenReturn(1.8106733983651840)
        `when`(mathMock.sec(-2.6370001000000000)).thenReturn(-1.1423720885603643)
        `when`(mathMock.csc(-2.6370001000000000)).thenReturn(-2.0684627517911274)
        `when`(mathMock.sin(-2.6416000000000000)).thenReturn(-0.4794190915097759)
        `when`(mathMock.cos(-2.6416000000000000)).thenReturn(-0.8775860839233613)
        `when`(mathMock.tan(-2.6416000000000000)).thenReturn(0.5462929509621111)
        `when`(mathMock.cot(-2.6416000000000000)).thenReturn(1.8305196840611557)
        `when`(mathMock.sec(-2.6416000000000000)).thenReturn(-1.1394893541718112)
        `when`(mathMock.csc(-2.6416000000000000)).thenReturn(-2.0858576925896344)
        `when`(mathMock.sin(-2.6429999000000000)).thenReturn(-0.4781900893886382)
        `when`(mathMock.cos(-2.6429999000000000)).thenReturn(-0.8782563625789944)
        `when`(mathMock.tan(-2.6429999000000000)).thenReturn(0.5444766582554961)
        `when`(mathMock.cot(-2.6429999000000000)).thenReturn(1.8366260239768613)
        `when`(mathMock.sec(-2.6429999000000000)).thenReturn(-1.1386197044602173)
        `when`(mathMock.csc(-2.6429999000000000)).thenReturn(-2.0912185806244774)
        `when`(mathMock.sin(-2.6430000000000000)).thenReturn(-0.4781900015629997)
        `when`(mathMock.cos(-2.6430000000000000)).thenReturn(-0.8782564103979990)
        `when`(mathMock.tan(-2.6430000000000000)).thenReturn(0.5444765286100203)
        `when`(mathMock.cot(-2.6430000000000000)).thenReturn(1.8366264612964558)
        `when`(mathMock.sec(-2.6430000000000000)).thenReturn(-1.1386196424650412)
        `when`(mathMock.csc(-2.6430000000000000)).thenReturn(-2.0912189647032045)
        `when`(mathMock.sin(-2.6430000999999996)).thenReturn(-0.4781899137373565)
        `when`(mathMock.cos(-2.6430000999999996)).thenReturn(-0.8782564582169946)
        `when`(mathMock.tan(-2.6430000999999996)).thenReturn(0.5444763989645585)
        `when`(mathMock.cot(-2.6430000999999996)).thenReturn(1.8366268986162115)
        `when`(mathMock.sec(-2.6430000999999996)).thenReturn(-1.1386195804698833)
        `when`(mathMock.csc(-2.6430000999999996)).thenReturn(-2.0912193487820930)
        `when`(mathMock.sin(-2.6470000000000000)).thenReturn(-0.4746731597745568)
        `when`(mathMock.cos(-2.6470000000000000)).thenReturn(-0.8801621392616465)
        `when`(mathMock.tan(-2.6470000000000000)).thenReturn(0.5393019519934728)
        `when`(mathMock.cot(-2.6470000000000000)).thenReturn(1.8542488049665045)
        `when`(mathMock.sec(-2.6470000000000000)).thenReturn(-1.1361543008869746)
        `when`(mathMock.csc(-2.6470000000000000)).thenReturn(-2.1067127546772270)
        `when`(mathMock.sin(-3.1415925535897933)).thenReturn(-0.0000001000000000)
        `when`(mathMock.cos(-3.1415925535897933)).thenReturn(-0.9999999999999950)
        `when`(mathMock.tan(-3.1415925535897933)).thenReturn(0.0000001000000000)
        `when`(mathMock.cot(-3.1415925535897933)).thenReturn(10000000.0041192860000000)
        `when`(mathMock.sec(-3.1415925535897933)).thenReturn(-1.0000000000000050)
        `when`(mathMock.csc(-3.1415925535897933)).thenReturn(-10000000.0041193370000000)
        `when`(mathMock.sin(-3.1415926535897930)).thenReturn(-0.0000000000000001)
        `when`(mathMock.cos(-3.1415926535897930)).thenReturn(-1.0000000000000000)
        `when`(mathMock.tan(-3.1415926535897930)).thenReturn(0.0000000000000001)
        `when`(mathMock.cot(-3.1415926535897930)).thenReturn(8165619676597685.0000000000000000)
        `when`(mathMock.sec(-3.1415926535897930)).thenReturn(-1.0000000000000000)
        `when`(mathMock.csc(-3.1415926535897930)).thenReturn(-8165619676597685.0000000000000000)
        `when`(mathMock.sin(-3.1415927535897930)).thenReturn(0.0000000999999997)
        `when`(mathMock.cos(-3.1415927535897930)).thenReturn(-0.9999999999999950)
        `when`(mathMock.tan(-3.1415927535897930)).thenReturn(-0.0000000999999997)
        `when`(mathMock.cot(-3.1415927535897930)).thenReturn(-10000000.0286122230000000)
        `when`(mathMock.sec(-3.1415927535897930)).thenReturn(-1.0000000000000050)
        `when`(mathMock.csc(-3.1415927535897930)).thenReturn(10000000.0286122730000000)
        `when`(mathMock.sin(-3.7070000000000000)).thenReturn(0.5357598117150862)
        `when`(mathMock.cos(-3.7070000000000000)).thenReturn(-0.8443704306470089)
        `when`(mathMock.tan(-3.7070000000000000)).thenReturn(-0.6345080219170559)
        `when`(mathMock.cot(-3.7070000000000000)).thenReturn(-1.5760242037266503)
        `when`(mathMock.sec(-3.7070000000000000)).thenReturn(-1.1843143290010028)
        `when`(mathMock.csc(-3.7070000000000000)).thenReturn(1.8665080473258675)
        `when`(mathMock.sin(-3.7199999000000004)).thenReturn(0.5466909633358445)
        `when`(mathMock.cos(-3.7199999000000004)).thenReturn(-0.8373344556429804)
        `when`(mathMock.tan(-3.7199999000000004)).thenReturn(-0.6528943836618382)
        `when`(mathMock.cot(-3.7199999000000004)).thenReturn(-1.5316412960873969)
        `when`(mathMock.sec(-3.7199999000000004)).thenReturn(-1.1942659152036332)
        `when`(mathMock.csc(-3.7199999000000004)).thenReturn(1.8291869942354937)
        `when`(mathMock.sin(-3.7200000000000000)).thenReturn(0.5466910470692872)
        `when`(mathMock.cos(-3.7200000000000000)).thenReturn(-0.8373344009738800)
        `when`(mathMock.tan(-3.7200000000000000)).thenReturn(-0.6528945262889550)
        `when`(mathMock.cot(-3.7200000000000000)).thenReturn(-1.5316409614949424)
        `when`(mathMock.sec(-3.7200000000000000)).thenReturn(-1.1942659931765949)
        `when`(mathMock.csc(-3.7200000000000000)).thenReturn(1.8291867140697127)
        `when`(mathMock.sin(-3.7200001000000000)).thenReturn(0.5466911308027245)
        `when`(mathMock.cos(-3.7200001000000000)).thenReturn(-0.8373343463047712)
        `when`(mathMock.tan(-3.7200001000000000)).thenReturn(-0.6528946689160903)
        `when`(mathMock.cot(-3.7200001000000000)).thenReturn(-1.5316406269025908)
        `when`(mathMock.sec(-3.7200001000000000)).thenReturn(-1.1942660711495790)
        `when`(mathMock.csc(-3.7200001000000000)).thenReturn(1.8291864339040351)
        `when`(mathMock.sin(-3.7390000000000000)).thenReturn(0.5625007687268155)
        `when`(mathMock.cos(-3.7390000000000000)).thenReturn(-0.8267967617145955)
        `when`(mathMock.tan(-3.7390000000000000)).thenReturn(-0.6803374115306308)
        `when`(mathMock.cot(-3.7390000000000000)).thenReturn(-1.4698589009682546)
        `when`(mathMock.sec(-3.7390000000000000)).thenReturn(-1.2094870786941871)
        `when`(mathMock.csc(-3.7390000000000000)).thenReturn(1.7777753482247427)
        `when`(mathMock.sin(-5.1420000000000000)).thenReturn(0.9091278354700241)
        `when`(mathMock.cos(-5.1420000000000000)).thenReturn(0.4165172010536767)
        `when`(mathMock.tan(-5.1420000000000000)).thenReturn(2.1826897740841790)
        `when`(mathMock.cot(-5.1420000000000000)).thenReturn(0.4581503115437391)
        `when`(mathMock.sec(-5.1420000000000000)).thenReturn(2.4008612308693817)
        `when`(mathMock.csc(-5.1420000000000000)).thenReturn(1.0999553208960922)
        `when`(mathMock.sin(-5.1449998999999990)).thenReturn(0.9078742365932647)
        `when`(mathMock.cos(-5.1449998999999990)).thenReturn(0.4192426153555918)
        `when`(mathMock.tan(-5.1449998999999990)).thenReturn(2.1655103831065150)
        `when`(mathMock.cot(-5.1449998999999990)).thenReturn(0.4617849019802244)
        `when`(mathMock.sec(-5.1449998999999990)).thenReturn(2.3852537012532070)
        `when`(mathMock.csc(-5.1449998999999990)).thenReturn(1.1014741466311797)
        `when`(mathMock.sin(-5.1450000000000000)).thenReturn(0.9078741946689985)
        `when`(mathMock.cos(-5.1450000000000000)).thenReturn(0.4192427061430136)
        `when`(mathMock.tan(-5.1450000000000000)).thenReturn(2.1655098141631144)
        `when`(mathMock.cot(-5.1450000000000000)).thenReturn(0.4617850233047599)
        `when`(mathMock.sec(-5.1450000000000000)).thenReturn(2.3852531847241640)
        `when`(mathMock.csc(-5.1450000000000000)).thenReturn(1.1014741974956008)
        `when`(mathMock.sin(-5.1450001000000000)).thenReturn(0.9078741527447233)
        `when`(mathMock.cos(-5.1450001000000000)).thenReturn(0.4192427969304313)
        `when`(mathMock.tan(-5.1450001000000000)).thenReturn(2.1655092452199605)
        `when`(mathMock.cot(-5.1450001000000000)).thenReturn(0.4617851446293066)
        `when`(mathMock.sec(-5.1450001000000000)).thenReturn(2.3852526681953680)
        `when`(mathMock.csc(-5.1450001000000000)).thenReturn(1.1014742483600375)
        `when`(mathMock.sin(-5.1470000000000000)).thenReturn(0.9070338940679183)
        `when`(mathMock.cos(-5.1470000000000000)).thenReturn(0.4210576148367208)
        `when`(mathMock.tan(-5.1470000000000000)).thenReturn(2.1541800031799716)
        `when`(mathMock.cot(-5.1470000000000000)).thenReturn(0.4642137604674695)
        `when`(mathMock.sec(-5.1470000000000000)).thenReturn(2.3749718916442910)
        `when`(mathMock.csc(-5.1470000000000000)).thenReturn(1.1024946328247358)
        `when`(mathMock.sin(-5.1509998999999995)).thenReturn(0.9053424543066045)
        `when`(mathMock.cos(-5.1509998999999995)).thenReturn(0.4246822817473006)
        `when`(mathMock.tan(-5.1509998999999995)).thenReturn(2.1318112226902652)
        `when`(mathMock.cot(-5.1509998999999995)).thenReturn(0.4690846869349143)
        `when`(mathMock.sec(-5.1509998999999995)).thenReturn(2.3547014862160687)
        `when`(mathMock.csc(-5.1509998999999995)).thenReturn(1.1045544094868422)
        `when`(mathMock.sin(-5.1510000000000000)).thenReturn(0.9053424118383717)
        `when`(mathMock.cos(-5.1510000000000000)).thenReturn(0.4246823722815442)
        `when`(mathMock.tan(-5.1510000000000000)).thenReturn(2.1318106682284728)
        `when`(mathMock.cot(-5.1510000000000000)).thenReturn(0.4690848089389648)
        `when`(mathMock.sec(-5.1510000000000000)).thenReturn(2.3547009842382810)
        `when`(mathMock.csc(-5.1510000000000000)).thenReturn(1.1045544612998062)
        `when`(mathMock.sin(-5.1510001000000000)).thenReturn(0.9053423693701299)
        `when`(mathMock.cos(-5.1510001000000000)).thenReturn(0.4246824628157835)
        `when`(mathMock.tan(-5.1510001000000000)).thenReturn(2.1318101137669170)
        `when`(mathMock.cot(-5.1510001000000000)).thenReturn(0.4690849309430266)
        `when`(mathMock.sec(-5.1510001000000000)).thenReturn(2.3547004822607303)
        `when`(mathMock.csc(-5.1510001000000000)).thenReturn(1.1045545131127860)
        `when`(mathMock.sin(-5.1650000000000000)).thenReturn(0.8993083307387134)
        `when`(mathMock.cos(-5.1650000000000000)).thenReturn(0.4373151338153630)
        `when`(mathMock.tan(-5.1650000000000000)).thenReturn(2.0564308463159806)
        `when`(mathMock.cot(-5.1650000000000000)).thenReturn(0.4862794203809298)
        `when`(mathMock.sec(-5.1650000000000000)).thenReturn(2.2866805254953873)
        `when`(mathMock.csc(-5.1650000000000000)).thenReturn(1.1119656805342568)
        `when`(mathMock.sin(-5.5069998999999990)).thenReturn(0.7005624633542618)
        `when`(mathMock.cos(-5.5069998999999990)).thenReturn(0.7135910838421460)
        `when`(mathMock.tan(-5.5069998999999990)).thenReturn(0.9817421759003280)
        `when`(mathMock.cot(-5.5069998999999990)).thenReturn(1.0185973716397876)
        `when`(mathMock.sec(-5.5069998999999990)).thenReturn(1.4013628009696528)
        `when`(mathMock.csc(-5.5069998999999990)).thenReturn(1.4274244657814590)
        `when`(mathMock.sin(-5.5070000000000000)).thenReturn(0.7005623919951497)
        `when`(mathMock.cos(-5.5070000000000000)).thenReturn(0.7135911538983890)
        `when`(mathMock.tan(-5.5070000000000000)).thenReturn(0.9817419795185767)
        `when`(mathMock.cot(-5.5070000000000000)).thenReturn(1.0185975753938694)
        `when`(mathMock.sec(-5.5070000000000000)).thenReturn(1.4013626633919762)
        `when`(mathMock.csc(-5.5070000000000000)).thenReturn(1.4274246111785622)
        `when`(mathMock.sin(-5.5070001000000000)).thenReturn(0.7005623206360305)
        `when`(mathMock.cos(-5.5070001000000000)).thenReturn(0.7135912239546248)
        `when`(mathMock.tan(-5.5070001000000000)).thenReturn(0.9817417831368640)
        `when`(mathMock.cot(-5.5070001000000000)).thenReturn(1.0185977791479928)
        `when`(mathMock.sec(-5.5070001000000000)).thenReturn(1.4013625258143407)
        `when`(mathMock.csc(-5.5070001000000000)).thenReturn(1.4274247565757094)
        `when`(mathMock.sin(-5.6000000000000000)).thenReturn(0.6312666378723216)
        `when`(mathMock.cos(-5.6000000000000000)).thenReturn(0.7755658785102496)
        `when`(mathMock.tan(-5.6000000000000000)).thenReturn(0.8139432836897027)
        `when`(mathMock.cot(-5.6000000000000000)).thenReturn(1.2285868315871837)
        `when`(mathMock.sec(-5.6000000000000000)).thenReturn(1.2893811186238053)
        `when`(mathMock.csc(-5.6000000000000000)).thenReturn(1.5841166632383596)
        `when`(mathMock.sin(-5.6849998999999990)).thenReturn(0.5631438965235057)
        `when`(mathMock.cos(-5.6849998999999990)).thenReturn(0.8263588517153568)
        `when`(mathMock.tan(-5.6849998999999990)).thenReturn(0.6814762077692166)
        `when`(mathMock.cot(-5.6849998999999990)).thenReturn(1.4674026599893450)
        `when`(mathMock.sec(-5.6849998999999990)).thenReturn(1.2101280187465755)
        `when`(mathMock.csc(-5.6849998999999990)).thenReturn(1.7757450736363611)
        `when`(mathMock.sin(-5.6850000000000000)).thenReturn(0.5631438138876175)
        `when`(mathMock.cos(-5.6850000000000000)).thenReturn(0.8263589080297424)
        `when`(mathMock.tan(-5.6850000000000000)).thenReturn(0.6814760613282440)
        `when`(mathMock.cot(-5.6850000000000000)).thenReturn(1.4674029753164488)
        `when`(mathMock.sec(-5.6850000000000000)).thenReturn(1.2101279362792419)
        `when`(mathMock.csc(-5.6850000000000000)).thenReturn(1.7757453342097136)
        `when`(mathMock.sin(-5.6850001000000000)).thenReturn(0.5631437312517237)
        `when`(mathMock.cos(-5.6850001000000000)).thenReturn(0.8263589643441199)
        `when`(mathMock.tan(-5.6850001000000000)).thenReturn(0.6814759148872913)
        `when`(mathMock.cot(-5.6850001000000000)).thenReturn(1.4674032906436452)
        `when`(mathMock.sec(-5.6850001000000000)).thenReturn(1.2101278538119310)
        `when`(mathMock.csc(-5.6850001000000000)).thenReturn(1.7757455947831600)
        `when`(mathMock.sin(-5.7320000000000000)).thenReturn(0.5236973649553304)
        `when`(mathMock.cos(-5.7320000000000000)).thenReturn(0.8519043784010290)
        `when`(mathMock.tan(-5.7320000000000000)).thenReturn(0.6147372618723682)
        `when`(mathMock.cot(-5.7320000000000000)).thenReturn(1.6267112179831065)
        `when`(mathMock.sec(-5.7320000000000000)).thenReturn(1.1738406625834430)
        `when`(mathMock.csc(-5.7320000000000000)).thenReturn(1.9094997739492094)
        `when`(mathMock.sin(-5.7960000000000000)).thenReturn(0.4681405312235087)
        `when`(mathMock.cos(-5.7960000000000000)).thenReturn(0.8836540290327267)
        `when`(mathMock.tan(-5.7960000000000000)).thenReturn(0.5297780758561684)
        `when`(mathMock.cot(-5.7960000000000000)).thenReturn(1.8875828305728040)
        `when`(mathMock.sec(-5.7960000000000000)).thenReturn(1.1316646188946018)
        `when`(mathMock.csc(-5.7960000000000000)).thenReturn(2.1361107045921660)
        `when`(mathMock.sin(-5.7969998999999990)).thenReturn(0.4672567316836768)
        `when`(mathMock.cos(-5.7969998999999990)).thenReturn(0.8841216809332800)
        `when`(mathMock.tan(-5.7969998999999990)).thenReturn(0.5284982166599963)
        `when`(mathMock.cot(-5.7969998999999990)).thenReturn(1.8921539722873641)
        `when`(mathMock.sec(-5.7969998999999990)).thenReturn(1.1310660303504814)
        `when`(mathMock.csc(-5.7969998999999990)).thenReturn(2.1401510822469640)
        `when`(mathMock.sin(-5.7970000000000000)).thenReturn(0.4672566432715061)
        `when`(mathMock.cos(-5.7970000000000000)).thenReturn(0.8841217276589488)
        `when`(mathMock.tan(-5.7970000000000000)).thenReturn(0.5284980887289662)
        `when`(mathMock.cot(-5.7970000000000000)).thenReturn(1.8921544303121176)
        `when`(mathMock.sec(-5.7970000000000000)).thenReturn(1.1310659705738522)
        `when`(mathMock.csc(-5.7970000000000000)).thenReturn(2.1401514871965897)
        `when`(mathMock.sin(-5.7970001000000000)).thenReturn(0.4672565548593307)
        `when`(mathMock.cos(-5.7970001000000000)).thenReturn(0.8841217743846089)
        `when`(mathMock.tan(-5.7970001000000000)).thenReturn(0.5284979607979496)
        `when`(mathMock.cot(-5.7970001000000000)).thenReturn(1.8921548883370443)
        `when`(mathMock.sec(-5.7970001000000000)).thenReturn(1.1310659107972405)
        `when`(mathMock.csc(-5.7970001000000000)).thenReturn(2.1401518921463900)
        `when`(mathMock.sin(-5.8000000000000000)).thenReturn(0.4646021794137574)
        `when`(mathMock.cos(-5.8000000000000000)).thenReturn(0.8855195169413189)
        `when`(mathMock.tan(-5.8000000000000000)).thenReturn(0.5246662219468002)
        `when`(mathMock.cot(-5.8000000000000000)).thenReturn(1.9059736612916494)
        `when`(mathMock.sec(-5.8000000000000000)).thenReturn(1.1292805871225844)
        `when`(mathMock.csc(-5.8000000000000000)).thenReturn(2.1523790552636157)
        `when`(mathMock.sin(-5.8009999000000000)).thenReturn(0.4637165163416975)
        `when`(mathMock.cos(-5.8009999000000000)).thenReturn(0.8859836299119302)
        `when`(mathMock.tan(-5.8009999000000000)).thenReturn(0.5233917430142502)
        `when`(mathMock.cot(-5.8009999000000000)).thenReturn(1.9106147801280338)
        `when`(mathMock.sec(-5.8009999000000000)).thenReturn(1.1286890256645072)
        `when`(mathMock.csc(-5.8009999000000000)).thenReturn(2.1564899346029174)
        `when`(mathMock.sin(-5.8010000000000000)).thenReturn(0.4637164277433320)
        `when`(mathMock.cos(-5.8010000000000000)).thenReturn(0.8859836762835775)
        `when`(mathMock.tan(-5.8010000000000000)).thenReturn(0.5233916156203648)
        `when`(mathMock.cot(-5.8010000000000000)).thenReturn(1.9106152451730076)
        `when`(mathMock.sec(-5.8010000000000000)).thenReturn(1.1286889665898643)
        `when`(mathMock.csc(-5.8010000000000000)).thenReturn(2.1564903466251620)
        `when`(mathMock.sin(-5.8010001000000000)).thenReturn(0.4637163391449618)
        `when`(mathMock.cos(-5.8010001000000000)).thenReturn(0.8859837226552161)
        `when`(mathMock.tan(-5.8010001000000000)).thenReturn(0.5233914882264928)
        `when`(mathMock.cot(-5.8010001000000000)).thenReturn(1.9106157102181593)
        `when`(mathMock.sec(-5.8010001000000000)).thenReturn(1.1286889075152386)
        `when`(mathMock.csc(-5.8010001000000000)).thenReturn(2.1564907586475863)
        `when`(mathMock.sin(-5.8040000000000000)).thenReturn(0.4610563939790461)
        `when`(mathMock.cos(-5.8040000000000000)).thenReturn(0.8873708365565316)
        `when`(mathMock.tan(-5.8040000000000000)).thenReturn(0.5195757793530705)
        `when`(mathMock.cot(-5.8040000000000000)).thenReturn(1.9246470673538918)
        `when`(mathMock.sec(-5.8040000000000000)).thenReturn(1.1269245717839107)
        `when`(mathMock.csc(-5.8040000000000000)).thenReturn(2.1689320722129444)
        `when`(mathMock.sin(-6.2831852071795860)).thenReturn(0.0000001000000005)
        `when`(mathMock.cos(-6.2831852071795860)).thenReturn(0.9999999999999950)
        `when`(mathMock.tan(-6.2831852071795860)).thenReturn(0.0000001000000005)
        `when`(mathMock.cot(-6.2831852071795860)).thenReturn(9999999.9474639000000000)
        `when`(mathMock.sec(-6.2831852071795860)).thenReturn(1.0000000000000050)
        `when`(mathMock.csc(-6.2831852071795860)).thenReturn(9999999.9474639480000000)
        `when`(mathMock.sin(-6.2831853071795860)).thenReturn(0.0000000000000002)
        `when`(mathMock.cos(-6.2831853071795860)).thenReturn(1.0000000000000000)
        `when`(mathMock.tan(-6.2831853071795860)).thenReturn(0.0000000000000002)
        `when`(mathMock.cot(-6.2831853071795860)).thenReturn(4082809838298842.5000000000000000)
        `when`(mathMock.sec(-6.2831853071795860)).thenReturn(1.0000000000000000)
        `when`(mathMock.csc(-6.2831853071795860)).thenReturn(4082809838298842.5000000000000000)
        `when`(mathMock.sin(-6.2831854071795865)).thenReturn(-0.0000001000000000)
        `when`(mathMock.cos(-6.2831854071795865)).thenReturn(0.9999999999999950)
        `when`(mathMock.tan(-6.2831854071795865)).thenReturn(-0.0000001000000000)
        `when`(mathMock.cot(-6.2831854071795865)).thenReturn(-9999999.9964497700000000)
        `when`(mathMock.sec(-6.2831854071795865)).thenReturn(1.0000000000000050)
        `when`(mathMock.csc(-6.2831854071795865)).thenReturn(-9999999.9964498200000000)
        `when`(mathMock.sin(-6.9181853071795860)).thenReturn(-0.5931775143558126)
        `when`(mathMock.cos(-6.9181853071795860)).thenReturn(0.8050716964734630)
        `when`(mathMock.tan(-6.9181853071795860)).thenReturn(-0.7368008550718750)
        `when`(mathMock.cot(-6.9181853071795860)).thenReturn(-1.3572188375140388)
        `when`(mathMock.sec(-6.9181853071795860)).thenReturn(1.2421253962602352)
        `when`(mathMock.csc(-6.9181853071795860)).thenReturn(-1.6858359863589811)
        `when`(mathMock.sin(-6.9198049795471680)).thenReturn(-0.5944806881138364)
        `when`(mathMock.cos(-6.9198049795471680)).thenReturn(0.8041098876768645)
        `when`(mathMock.tan(-6.9198049795471680)).thenReturn(-0.7393027958297304)
        `when`(mathMock.cot(-6.9198049795471680)).thenReturn(-1.3526257517769635)
        `when`(mathMock.sec(-6.9198049795471680)).thenReturn(1.2436111224662056)
        `when`(mathMock.csc(-6.9198049795471680)).thenReturn(-1.6821404294440450)
        `when`(mathMock.sin(-6.9198050795471670)).thenReturn(-0.5944807685248217)
        `when`(mathMock.cos(-6.9198050795471670)).thenReturn(0.8041098282287921)
        `when`(mathMock.tan(-6.9198050795471670)).thenReturn(-0.7393029504866032)
        `when`(mathMock.cot(-6.9198050795471670)).thenReturn(-1.3526254688173611)
        `when`(mathMock.sec(-6.9198050795471670)).thenReturn(1.2436112144067360)
        `when`(mathMock.csc(-6.9198050795471670)).thenReturn(-1.6821402019134390)
        `when`(mathMock.sin(-6.9198051795471680)).thenReturn(-0.5944808489358018)
        `when`(mathMock.cos(-6.9198051795471680)).thenReturn(0.8041097687807109)
        `when`(mathMock.tan(-6.9198051795471680)).thenReturn(-0.7393031051435004)
        `when`(mathMock.cot(-6.9198051795471680)).thenReturn(-1.3526251858578326)
        `when`(mathMock.sec(-6.9198051795471680)).thenReturn(1.2436113063472933)
        `when`(mathMock.csc(-6.9198051795471680)).thenReturn(-1.6821399743829097)
        `when`(mathMock.sin(-7.0001852071795865)).thenReturn(-0.6571262155603232)
        `when`(mathMock.cos(-7.0001852071795865)).thenReturn(0.7537805627789612)
        `when`(mathMock.tan(-7.0001852071795865)).thenReturn(-0.8717738928391805)
        `when`(mathMock.cot(-7.0001852071795865)).thenReturn(-1.1470864271275831)
        `when`(mathMock.sec(-7.0001852071795865)).thenReturn(1.3266460418046628)
        `when`(mathMock.csc(-7.0001852071795865)).thenReturn(-1.5217776681566608)
        `when`(mathMock.sin(-7.0001853071795860)).thenReturn(-0.6571262909383758)
        `when`(mathMock.cos(-7.0001853071795860)).thenReturn(0.7537804970663363)
        `when`(mathMock.tan(-7.0001853071795860)).thenReturn(-0.8717740688381668)
        `when`(mathMock.cot(-7.0001853071795860)).thenReturn(-1.1470861955468838)
        `when`(mathMock.sec(-7.0001853071795860)).thenReturn(1.3266461574582171)
        `when`(mathMock.csc(-7.0001853071795860)).thenReturn(-1.5217774935956387)
        `when`(mathMock.sin(-7.0001854071795860)).thenReturn(-0.6571263663164224)
        `when`(mathMock.cos(-7.0001854071795860)).thenReturn(0.7537804313537033)
        `when`(mathMock.tan(-7.0001854071795860)).thenReturn(-0.8717742448371852)
        `when`(mathMock.cot(-7.0001854071795860)).thenReturn(-1.1470859639662359)
        `when`(mathMock.sec(-7.0001854071795860)).thenReturn(1.3266462731118060)
        `when`(mathMock.csc(-7.0001854071795860)).thenReturn(-1.5217773190346704)
        `when`(mathMock.sin(-7.0831853071795860)).thenReturn(-0.7173560908995225)
        `when`(mathMock.cos(-7.0831853071795860)).thenReturn(0.6967067093471657)
        `when`(mathMock.tan(-7.0831853071795860)).thenReturn(-1.0296385570503632)
        `when`(mathMock.cot(-7.0831853071795860)).thenReturn(-0.9712146006504752)
        `when`(mathMock.sec(-7.0831853071795860)).thenReturn(1.4353241996722392)
        `when`(mathMock.csc(-7.0831853071795860)).thenReturn(-1.3940078193886367)
        `when`(mathMock.sin(-8.1458853071795860)).thenReturn(-0.9576977799288106)
        `when`(mathMock.cos(-8.1458853071795860)).thenReturn(-0.2877758890515805)
        `when`(mathMock.tan(-8.1458853071795860)).thenReturn(3.3279291850511994)
        `when`(mathMock.cot(-8.1458853071795860)).thenReturn(0.3004871631559718)
        `when`(mathMock.sec(-8.1458853071795860)).thenReturn(-3.4749262813354100)
        `when`(mathMock.csc(-8.1458853071795860)).thenReturn(-1.0441707404546077)
        `when`(mathMock.sin(-8.1471852071795860)).thenReturn(-0.9573228910259680)
        `when`(mathMock.cos(-8.1471852071795860)).thenReturn(-0.2890205569119307)
        `when`(mathMock.tan(-8.1471852071795860)).thenReturn(3.3123003472645030)
        `when`(mathMock.cot(-8.1471852071795860)).thenReturn(0.3019049890285041)
        `when`(mathMock.sec(-8.1471852071795860)).thenReturn(-3.4599615013015024)
        `when`(mathMock.csc(-8.1471852071795860)).thenReturn(-1.0445796390894766)
        `when`(mathMock.sin(-8.1471853071795870)).thenReturn(-0.9573228621239072)
        `when`(mathMock.cos(-8.1471853071795870)).thenReturn(-0.2890206526442194)
        `when`(mathMock.tan(-8.1471853071795870)).thenReturn(3.3122991501315260)
        `when`(mathMock.cot(-8.1471853071795870)).thenReturn(0.3019050981431709)
        `when`(mathMock.sec(-8.1471853071795870)).thenReturn(-3.4599603552587177)
        `when`(mathMock.csc(-8.1471853071795870)).thenReturn(-1.0445796706258637)
        `when`(mathMock.sin(-8.1471854071795860)).thenReturn(-0.9573228332218373)
        `when`(mathMock.cos(-8.1471854071795860)).thenReturn(-0.2890207483765037)
        `when`(mathMock.tan(-8.1471854071795860)).thenReturn(3.3122979529993644)
        `when`(mathMock.cot(-8.1471854071795860)).thenReturn(0.3019052072578423)
        `when`(mathMock.sec(-8.1471854071795860)).thenReturn(-3.4599592092167470)
        `when`(mathMock.csc(-8.1471854071795860)).thenReturn(-1.0445797021622625)
        `when`(mathMock.sin(-8.1482853071795860)).thenReturn(-0.9570043602898400)
        `when`(mathMock.cos(-8.1482853071795860)).thenReturn(-0.2900735327227117)
        `when`(mathMock.tan(-8.1482853071795860)).thenReturn(3.2991784921124250)
        `when`(mathMock.cot(-8.1482853071795860)).thenReturn(0.3031057587186536)
        `when`(mathMock.sec(-8.1482853071795860)).thenReturn(-3.4474017350487616)
        `when`(mathMock.csc(-8.1482853071795860)).thenReturn(-1.0449273185099577)
        `when`(mathMock.sin(-8.1501852071795860)).thenReturn(-0.9564515227060455)
        `when`(mathMock.cos(-8.1501852071795860)).thenReturn(-0.2918912206855270)
        `when`(mathMock.tan(-8.1501852071795860)).thenReturn(3.2767396034034600)
        `when`(mathMock.cot(-8.1501852071795860)).thenReturn(0.3051814062250559)
        `when`(mathMock.sec(-8.1501852071795860)).thenReturn(-3.4259338038719696)
        `when`(mathMock.csc(-8.1501852071795860)).thenReturn(-1.0455312958996026)
        `when`(mathMock.sin(-8.1501853071795870)).thenReturn(-0.9564514935169183)
        `when`(mathMock.cos(-8.1501853071795870)).thenReturn(-0.2918913163306789)
        `when`(mathMock.tan(-8.1501853071795870)).thenReturn(3.2767384297015880)
        `when`(mathMock.cot(-8.1501853071795870)).thenReturn(0.3051815155386296)
        `when`(mathMock.sec(-8.1501853071795870)).thenReturn(-3.4259326812830446)
        `when`(mathMock.csc(-8.1501853071795870)).thenReturn(-1.0455313278072804)
        `when`(mathMock.sin(-8.1501854071795870)).thenReturn(-0.9564514643277820)
        `when`(mathMock.cos(-8.1501854071795870)).thenReturn(-0.2918914119758262)
        `when`(mathMock.tan(-8.1501854071795870)).thenReturn(3.2767372560005064)
        `when`(mathMock.cot(-8.1501854071795870)).thenReturn(0.3051816248522080)
        `when`(mathMock.sec(-8.1501854071795870)).thenReturn(-3.4259315586949090)
        `when`(mathMock.csc(-8.1501854071795870)).thenReturn(-1.0455313597149698)
        `when`(mathMock.sin(-8.1583853071795860)).thenReturn(-0.9540258558271400)
        `when`(mathMock.cos(-8.1583853071795860)).thenReturn(-0.2997243173539532)
        `when`(mathMock.tan(-8.1583853071795860)).thenReturn(3.1830111892472943)
        `when`(mathMock.cot(-8.1583853071795860)).thenReturn(0.3141679185351767)
        `when`(mathMock.sec(-8.1583853071795860)).thenReturn(-3.3363992912829654)
        `when`(mathMock.csc(-8.1583853071795860)).thenReturn(-1.0481896207446082)
        `when`(mathMock.sin(-8.6461852071795860)).thenReturn(-0.7022782926393419)
        `when`(mathMock.cos(-8.6461852071795860)).thenReturn(-0.7119025211976502)
        `when`(mathMock.tan(-8.6461852071795860)).thenReturn(0.9864809741899534)
        `when`(mathMock.cot(-8.6461852071795860)).thenReturn(1.0137042945213897)
        `when`(mathMock.sec(-8.6461852071795860)).thenReturn(-1.4046866954729655)
        `when`(mathMock.csc(-8.6461852071795860)).thenReturn(-1.4239369356580047)
        `when`(mathMock.sin(-8.6461853071795860)).thenReturn(-0.7022782214490867)
        `when`(mathMock.cos(-8.6461853071795860)).thenReturn(-0.7119025914254755)
        `when`(mathMock.tan(-8.6461853071795860)).thenReturn(0.9864807768755028)
        `when`(mathMock.cot(-8.6461853071795860)).thenReturn(1.0137044972810487)
        `when`(mathMock.sec(-8.6461853071795860)).thenReturn(-1.4046865569033170)
        `when`(mathMock.csc(-8.6461853071795860)).thenReturn(-1.4239370800031244)
        `when`(mathMock.sin(-8.6461854071795870)).thenReturn(-0.7022781502588232)
        `when`(mathMock.cos(-8.6461854071795870)).thenReturn(-0.7119026616532949)
        `when`(mathMock.tan(-8.6461854071795870)).thenReturn(0.9864805795610877)
        `when`(mathMock.cot(-8.6461854071795870)).thenReturn(1.0137047000407524)
        `when`(mathMock.sec(-8.6461854071795870)).thenReturn(-1.4046864183337076)
        `when`(mathMock.csc(-8.6461854071795870)).thenReturn(-1.4239372243482900)
        `when`(mathMock.sin(-8.8831853071795860)).thenReturn(-0.5155013718214647)
        `when`(mathMock.cos(-8.8831853071795860)).thenReturn(-0.8568887533689469)
        `when`(mathMock.tan(-8.8831853071795860)).thenReturn(0.6015966130897595)
        `when`(mathMock.cot(-8.8831853071795860)).thenReturn(1.6622434007134241)
        `when`(mathMock.sec(-8.8831853071795860)).thenReturn(-1.1670126326998649)
        `when`(mathMock.csc(-8.8831853071795860)).thenReturn(-1.9398590472545498)
        `when`(mathMock.sin(-8.9201852071795860)).thenReturn(-0.4834509885511541)
        `when`(mathMock.cos(-8.9201852071795860)).thenReturn(-0.8753714306903738)
        `when`(mathMock.tan(-8.9201852071795860)).thenReturn(0.5522809765105925)
        `when`(mathMock.cot(-8.9201852071795860)).thenReturn(1.8106725426578594)
        `when`(mathMock.sec(-8.9201852071795860)).thenReturn(-1.1423722147424165)
        `when`(mathMock.csc(-8.9201852071795860)).thenReturn(-2.0684620027293410)
        `when`(mathMock.sin(-8.9201853071795870)).thenReturn(-0.4834509010140076)
        `when`(mathMock.cos(-8.9201853071795870)).thenReturn(-0.8753714790354689)
        `when`(mathMock.tan(-8.9201853071795870)).thenReturn(0.5522808460091705)
        `when`(mathMock.cot(-8.9201853071795870)).thenReturn(1.8106729705114475)
        `when`(mathMock.sec(-8.9201853071795870)).thenReturn(-1.1423721516513807)
        `when`(mathMock.csc(-8.9201853071795870)).thenReturn(-2.0684623772601590)
        `when`(mathMock.sin(-8.9201854071795860)).thenReturn(-0.4834508134768578)
        `when`(mathMock.cos(-8.9201854071795860)).thenReturn(-0.8753715273805542)
        `when`(mathMock.tan(-8.9201854071795860)).thenReturn(0.5522807155077653)
        `when`(mathMock.cot(-8.9201854071795860)).thenReturn(1.8106733983651828)
        `when`(mathMock.sec(-8.9201854071795860)).thenReturn(-1.1423720885603645)
        `when`(mathMock.csc(-8.9201854071795860)).thenReturn(-2.0684627517911265)
        `when`(mathMock.sin(-8.9247853071795870)).thenReturn(-0.4794190915097757)
        `when`(mathMock.cos(-8.9247853071795870)).thenReturn(-0.8775860839233615)
        `when`(mathMock.tan(-8.9247853071795870)).thenReturn(0.5462929509621107)
        `when`(mathMock.cot(-8.9247853071795870)).thenReturn(1.8305196840611568)
        `when`(mathMock.sec(-8.9247853071795870)).thenReturn(-1.1394893541718112)
        `when`(mathMock.csc(-8.9247853071795870)).thenReturn(-2.0858576925896353)
        `when`(mathMock.sin(-8.9261852071795860)).thenReturn(-0.4781900893886388)
        `when`(mathMock.cos(-8.9261852071795860)).thenReturn(-0.8782563625789941)
        `when`(mathMock.tan(-8.9261852071795860)).thenReturn(0.5444766582554970)
        `when`(mathMock.cot(-8.9261852071795860)).thenReturn(1.8366260239768581)
        `when`(mathMock.sec(-8.9261852071795860)).thenReturn(-1.1386197044602175)
        `when`(mathMock.csc(-8.9261852071795860)).thenReturn(-2.0912185806244747)
        `when`(mathMock.sin(-8.9261853071795870)).thenReturn(-0.4781900015629992)
        `when`(mathMock.cos(-8.9261853071795870)).thenReturn(-0.8782564103979992)
        `when`(mathMock.tan(-8.9261853071795870)).thenReturn(0.5444765286100194)
        `when`(mathMock.cot(-8.9261853071795870)).thenReturn(1.8366264612964587)
        `when`(mathMock.sec(-8.9261853071795870)).thenReturn(-1.1386196424650408)
        `when`(mathMock.csc(-8.9261853071795870)).thenReturn(-2.0912189647032067)
        `when`(mathMock.sin(-8.9261854071795860)).thenReturn(-0.4781899137373563)
        `when`(mathMock.cos(-8.9261854071795860)).thenReturn(-0.8782564582169947)
        `when`(mathMock.tan(-8.9261854071795860)).thenReturn(0.5444763989645582)
        `when`(mathMock.cot(-8.9261854071795860)).thenReturn(1.8366268986162122)
        `when`(mathMock.sec(-8.9261854071795860)).thenReturn(-1.1386195804698830)
        `when`(mathMock.csc(-8.9261854071795860)).thenReturn(-2.0912193487820945)
        `when`(mathMock.sin(-8.9301853071795860)).thenReturn(-0.4746731597745567)
        `when`(mathMock.cos(-8.9301853071795860)).thenReturn(-0.8801621392616467)
        `when`(mathMock.tan(-8.9301853071795860)).thenReturn(0.5393019519934725)
        `when`(mathMock.cot(-8.9301853071795860)).thenReturn(1.8542488049665051)
        `when`(mathMock.sec(-8.9301853071795860)).thenReturn(-1.1361543008869743)
        `when`(mathMock.csc(-8.9301853071795860)).thenReturn(-2.1067127546772277)
        `when`(mathMock.sin(-9.4247778607693800)).thenReturn(-0.0000000999999998)
        `when`(mathMock.cos(-9.4247778607693800)).thenReturn(-0.9999999999999950)
        `when`(mathMock.tan(-9.4247778607693800)).thenReturn(0.0000000999999998)
        `when`(mathMock.cot(-9.4247778607693800)).thenReturn(10000000.0240352730000000)
        `when`(mathMock.sec(-9.4247778607693800)).thenReturn(-1.0000000000000050)
        `when`(mathMock.csc(-9.4247778607693800)).thenReturn(-10000000.0240353230000000)
        `when`(mathMock.sin(-9.4247779607693800)).thenReturn(-0.0000000000000004)
        `when`(mathMock.cos(-9.4247779607693800)).thenReturn(-1.0000000000000000)
        `when`(mathMock.tan(-9.4247779607693800)).thenReturn(0.0000000000000004)
        `when`(mathMock.cot(-9.4247779607693800)).thenReturn(2721873225532561.5000000000000000)
        `when`(mathMock.sec(-9.4247779607693800)).thenReturn(-1.0000000000000000)
        `when`(mathMock.csc(-9.4247779607693800)).thenReturn(-2721873225532561.5000000000000000)
        `when`(mathMock.sin(-9.4247780607693790)).thenReturn(0.0000000999999990)
        `when`(mathMock.cos(-9.4247780607693790)).thenReturn(-0.9999999999999950)
        `when`(mathMock.tan(-9.4247780607693790)).thenReturn(-0.0000000999999990)
        `when`(mathMock.cot(-9.4247780607693790)).thenReturn(-10000000.0975140820000000)
        `when`(mathMock.sec(-9.4247780607693790)).thenReturn(-1.0000000000000050)
        `when`(mathMock.csc(-9.4247780607693790)).thenReturn(10000000.0975141300000000)
        `when`(mathMock.sin(-9.9901853071795870)).thenReturn(0.5357598117150868)
        `when`(mathMock.cos(-9.9901853071795870)).thenReturn(-0.8443704306470086)
        `when`(mathMock.tan(-9.9901853071795870)).thenReturn(-0.6345080219170568)
        `when`(mathMock.cot(-9.9901853071795870)).thenReturn(-1.5760242037266480)
        `when`(mathMock.sec(-9.9901853071795870)).thenReturn(-1.1843143290010032)
        `when`(mathMock.csc(-9.9901853071795870)).thenReturn(1.8665080473258655)
        `when`(mathMock.sin(-10.0031852071795870)).thenReturn(0.5466909633358450)
        `when`(mathMock.cos(-10.0031852071795870)).thenReturn(-0.8373344556429800)
        `when`(mathMock.tan(-10.0031852071795870)).thenReturn(-0.6528943836618392)
        `when`(mathMock.cot(-10.0031852071795870)).thenReturn(-1.5316412960873946)
        `when`(mathMock.sec(-10.0031852071795870)).thenReturn(-1.1942659152036337)
        `when`(mathMock.csc(-10.0031852071795870)).thenReturn(1.8291869942354924)
        `when`(mathMock.sin(-10.0031853071795870)).thenReturn(0.5466910470692874)
        `when`(mathMock.cos(-10.0031853071795870)).thenReturn(-0.8373344009738799)
        `when`(mathMock.tan(-10.0031853071795870)).thenReturn(-0.6528945262889552)
        `when`(mathMock.cot(-10.0031853071795870)).thenReturn(-1.5316409614949420)
        `when`(mathMock.sec(-10.0031853071795870)).thenReturn(-1.1942659931765950)
        `when`(mathMock.csc(-10.0031853071795870)).thenReturn(1.8291867140697118)
        `when`(mathMock.sin(-10.0031854071795860)).thenReturn(0.5466911308027242)
        `when`(mathMock.cos(-10.0031854071795860)).thenReturn(-0.8373343463047713)
        `when`(mathMock.tan(-10.0031854071795860)).thenReturn(-0.6528946689160898)
        `when`(mathMock.cot(-10.0031854071795860)).thenReturn(-1.5316406269025920)
        `when`(mathMock.sec(-10.0031854071795860)).thenReturn(-1.1942660711495787)
        `when`(mathMock.csc(-10.0031854071795860)).thenReturn(1.8291864339040360)
        `when`(mathMock.sin(-10.0221853071795870)).thenReturn(0.5625007687268161)
        `when`(mathMock.cos(-10.0221853071795870)).thenReturn(-0.8267967617145950)
        `when`(mathMock.tan(-10.0221853071795870)).thenReturn(-0.6803374115306317)
        `when`(mathMock.cot(-10.0221853071795870)).thenReturn(-1.4698589009682526)
        `when`(mathMock.sec(-10.0221853071795870)).thenReturn(-1.2094870786941878)
        `when`(mathMock.csc(-10.0221853071795870)).thenReturn(1.7777753482247410)
        `when`(mathMock.sin(-11.4251853071795860)).thenReturn(0.9091278354700245)
        `when`(mathMock.cos(-11.4251853071795860)).thenReturn(0.4165172010536756)
        `when`(mathMock.tan(-11.4251853071795860)).thenReturn(2.1826897740841855)
        `when`(mathMock.cot(-11.4251853071795860)).thenReturn(0.4581503115437377)
        `when`(mathMock.sec(-11.4251853071795860)).thenReturn(2.4008612308693880)
        `when`(mathMock.csc(-11.4251853071795860)).thenReturn(1.0999553208960917)
        `when`(mathMock.sin(-11.4281852071795850)).thenReturn(0.9078742365932653)
        `when`(mathMock.cos(-11.4281852071795850)).thenReturn(0.4192426153555908)
        `when`(mathMock.tan(-11.4281852071795850)).thenReturn(2.1655103831065210)
        `when`(mathMock.cot(-11.4281852071795850)).thenReturn(0.4617849019802230)
        `when`(mathMock.sec(-11.4281852071795850)).thenReturn(2.3852537012532130)
        `when`(mathMock.csc(-11.4281852071795850)).thenReturn(1.1014741466311790)
        `when`(mathMock.sin(-11.4281853071795860)).thenReturn(0.9078741946689987)
        `when`(mathMock.cos(-11.4281853071795860)).thenReturn(0.4192427061430134)
        `when`(mathMock.tan(-11.4281853071795860)).thenReturn(2.1655098141631157)
        `when`(mathMock.cot(-11.4281853071795860)).thenReturn(0.4617850233047596)
        `when`(mathMock.sec(-11.4281853071795860)).thenReturn(2.3852531847241650)
        `when`(mathMock.csc(-11.4281853071795860)).thenReturn(1.1014741974956006)
        `when`(mathMock.sin(-11.4281854071795870)).thenReturn(0.9078741527447230)
        `when`(mathMock.cos(-11.4281854071795870)).thenReturn(0.4192427969304318)
        `when`(mathMock.tan(-11.4281854071795870)).thenReturn(2.1655092452199570)
        `when`(mathMock.cot(-11.4281854071795870)).thenReturn(0.4617851446293074)
        `when`(mathMock.sec(-11.4281854071795870)).thenReturn(2.3852526681953647)
        `when`(mathMock.csc(-11.4281854071795870)).thenReturn(1.1014742483600380)
        `when`(mathMock.sin(-11.4301853071795860)).thenReturn(0.9070338940679185)
        `when`(mathMock.cos(-11.4301853071795860)).thenReturn(0.4210576148367206)
        `when`(mathMock.tan(-11.4301853071795860)).thenReturn(2.1541800031799730)
        `when`(mathMock.cot(-11.4301853071795860)).thenReturn(0.4642137604674692)
        `when`(mathMock.sec(-11.4301853071795860)).thenReturn(2.3749718916442920)
        `when`(mathMock.csc(-11.4301853071795860)).thenReturn(1.1024946328247358)
        `when`(mathMock.sin(-11.4341852071795850)).thenReturn(0.9053424543066051)
        `when`(mathMock.cos(-11.4341852071795850)).thenReturn(0.4246822817472996)
        `when`(mathMock.tan(-11.4341852071795850)).thenReturn(2.1318112226902715)
        `when`(mathMock.cot(-11.4341852071795850)).thenReturn(0.4690846869349130)
        `when`(mathMock.sec(-11.4341852071795850)).thenReturn(2.3547014862160744)
        `when`(mathMock.csc(-11.4341852071795850)).thenReturn(1.1045544094868416)
        `when`(mathMock.sin(-11.4341853071795860)).thenReturn(0.9053424118383718)
        `when`(mathMock.cos(-11.4341853071795860)).thenReturn(0.4246823722815439)
        `when`(mathMock.tan(-11.4341853071795860)).thenReturn(2.1318106682284740)
        `when`(mathMock.cot(-11.4341853071795860)).thenReturn(0.4690848089389645)
        `when`(mathMock.sec(-11.4341853071795860)).thenReturn(2.3547009842382822)
        `when`(mathMock.csc(-11.4341853071795860)).thenReturn(1.1045544612998062)
        `when`(mathMock.sin(-11.4341854071795870)).thenReturn(0.9053423693701296)
        `when`(mathMock.cos(-11.4341854071795870)).thenReturn(0.4246824628157840)
        `when`(mathMock.tan(-11.4341854071795870)).thenReturn(2.1318101137669134)
        `when`(mathMock.cot(-11.4341854071795870)).thenReturn(0.4690849309430274)
        `when`(mathMock.sec(-11.4341854071795870)).thenReturn(2.3547004822607270)
        `when`(mathMock.csc(-11.4341854071795870)).thenReturn(1.1045545131127865)
        `when`(mathMock.sin(-11.4481853071795850)).thenReturn(0.8993083307387139)
        `when`(mathMock.cos(-11.4481853071795850)).thenReturn(0.4373151338153620)
        `when`(mathMock.tan(-11.4481853071795850)).thenReturn(2.0564308463159870)
        `when`(mathMock.cot(-11.4481853071795850)).thenReturn(0.4862794203809284)
        `when`(mathMock.sec(-11.4481853071795850)).thenReturn(2.2866805254953926)
        `when`(mathMock.csc(-11.4481853071795850)).thenReturn(1.1119656805342564)
        `when`(mathMock.sin(-11.7901852071795870)).thenReturn(0.7005624633542613)
        `when`(mathMock.cos(-11.7901852071795870)).thenReturn(0.7135910838421464)
        `when`(mathMock.tan(-11.7901852071795870)).thenReturn(0.9817421759003266)
        `when`(mathMock.cot(-11.7901852071795870)).thenReturn(1.0185973716397890)
        `when`(mathMock.sec(-11.7901852071795870)).thenReturn(1.4013628009696520)
        `when`(mathMock.csc(-11.7901852071795870)).thenReturn(1.4274244657814599)
        `when`(mathMock.sin(-11.7901853071795860)).thenReturn(0.7005623919951498)
        `when`(mathMock.cos(-11.7901853071795860)).thenReturn(0.7135911538983888)
        `when`(mathMock.tan(-11.7901853071795860)).thenReturn(0.9817419795185771)
        `when`(mathMock.cot(-11.7901853071795860)).thenReturn(1.0185975753938690)
        `when`(mathMock.sec(-11.7901853071795860)).thenReturn(1.4013626633919767)
        `when`(mathMock.csc(-11.7901853071795860)).thenReturn(1.4274246111785620)
        `when`(mathMock.sin(-11.7901854071795850)).thenReturn(0.7005623206360314)
        `when`(mathMock.cos(-11.7901854071795850)).thenReturn(0.7135912239546240)
        `when`(mathMock.tan(-11.7901854071795850)).thenReturn(0.9817417831368662)
        `when`(mathMock.cot(-11.7901854071795850)).thenReturn(1.0185977791479905)
        `when`(mathMock.sec(-11.7901854071795850)).thenReturn(1.4013625258143423)
        `when`(mathMock.csc(-11.7901854071795850)).thenReturn(1.4274247565757077)
        `when`(mathMock.sin(-11.8831853071795860)).thenReturn(0.6312666378723217)
        `when`(mathMock.cos(-11.8831853071795860)).thenReturn(0.7755658785102494)
        `when`(mathMock.tan(-11.8831853071795860)).thenReturn(0.8139432836897031)
        `when`(mathMock.cot(-11.8831853071795860)).thenReturn(1.2285868315871828)
        `when`(mathMock.sec(-11.8831853071795860)).thenReturn(1.2893811186238058)
        `when`(mathMock.csc(-11.8831853071795860)).thenReturn(1.5841166632383592)
        `when`(mathMock.sin(-11.9681852071795860)).thenReturn(0.5631438965235059)
        `when`(mathMock.cos(-11.9681852071795860)).thenReturn(0.8263588517153567)
        `when`(mathMock.tan(-11.9681852071795860)).thenReturn(0.6814762077692169)
        `when`(mathMock.cot(-11.9681852071795860)).thenReturn(1.4674026599893444)
        `when`(mathMock.sec(-11.9681852071795860)).thenReturn(1.2101280187465757)
        `when`(mathMock.csc(-11.9681852071795860)).thenReturn(1.7757450736363605)
        `when`(mathMock.sin(-11.9681853071795850)).thenReturn(0.5631438138876185)
        `when`(mathMock.cos(-11.9681853071795850)).thenReturn(0.8263589080297419)
        `when`(mathMock.tan(-11.9681853071795850)).thenReturn(0.6814760613282457)
        `when`(mathMock.cot(-11.9681853071795850)).thenReturn(1.4674029753164453)
        `when`(mathMock.sec(-11.9681853071795850)).thenReturn(1.2101279362792425)
        `when`(mathMock.csc(-11.9681853071795850)).thenReturn(1.7757453342097105)
        `when`(mathMock.sin(-11.9681854071795860)).thenReturn(0.5631437312517239)
        `when`(mathMock.cos(-11.9681854071795860)).thenReturn(0.8263589643441198)
        `when`(mathMock.tan(-11.9681854071795860)).thenReturn(0.6814759148872916)
        `when`(mathMock.cot(-11.9681854071795860)).thenReturn(1.4674032906436445)
        `when`(mathMock.sec(-11.9681854071795860)).thenReturn(1.2101278538119313)
        `when`(mathMock.csc(-11.9681854071795860)).thenReturn(1.7757455947831590)
        `when`(mathMock.sin(-12.0151853071795860)).thenReturn(0.5236973649553314)
        `when`(mathMock.cos(-12.0151853071795860)).thenReturn(0.8519043784010283)
        `when`(mathMock.tan(-12.0151853071795860)).thenReturn(0.6147372618723699)
        `when`(mathMock.cot(-12.0151853071795860)).thenReturn(1.6267112179831020)
        `when`(mathMock.sec(-12.0151853071795860)).thenReturn(1.1738406625834439)
        `when`(mathMock.csc(-12.0151853071795860)).thenReturn(1.9094997739492060)
        `when`(mathMock.sin(-12.0791853071795860)).thenReturn(0.4681405312235097)
        `when`(mathMock.cos(-12.0791853071795860)).thenReturn(0.8836540290327262)
        `when`(mathMock.tan(-12.0791853071795860)).thenReturn(0.5297780758561699)
        `when`(mathMock.cot(-12.0791853071795860)).thenReturn(1.8875828305727986)
        `when`(mathMock.sec(-12.0791853071795860)).thenReturn(1.1316646188946025)
        `when`(mathMock.csc(-12.0791853071795860)).thenReturn(2.1361107045921610)
        `when`(mathMock.sin(-12.0801852071795860)).thenReturn(0.4672567316836770)
        `when`(mathMock.cos(-12.0801852071795860)).thenReturn(0.8841216809332798)
        `when`(mathMock.tan(-12.0801852071795860)).thenReturn(0.5284982166599966)
        `when`(mathMock.cot(-12.0801852071795860)).thenReturn(1.8921539722873630)
        `when`(mathMock.sec(-12.0801852071795860)).thenReturn(1.1310660303504818)
        `when`(mathMock.csc(-12.0801852071795860)).thenReturn(2.1401510822469630)
        `when`(mathMock.sin(-12.0801853071795870)).thenReturn(0.4672566432715055)
        `when`(mathMock.cos(-12.0801853071795870)).thenReturn(0.8841217276589491)
        `when`(mathMock.tan(-12.0801853071795870)).thenReturn(0.5284980887289654)
        `when`(mathMock.cot(-12.0801853071795870)).thenReturn(1.8921544303121203)
        `when`(mathMock.sec(-12.0801853071795870)).thenReturn(1.1310659705738517)
        `when`(mathMock.csc(-12.0801853071795870)).thenReturn(2.1401514871965920)
        `when`(mathMock.sin(-12.0801854071795860)).thenReturn(0.4672565548593309)
        `when`(mathMock.cos(-12.0801854071795860)).thenReturn(0.8841217743846088)
        `when`(mathMock.tan(-12.0801854071795860)).thenReturn(0.5284979607979500)
        `when`(mathMock.cot(-12.0801854071795860)).thenReturn(1.8921548883370432)
        `when`(mathMock.sec(-12.0801854071795860)).thenReturn(1.1310659107972405)
        `when`(mathMock.csc(-12.0801854071795860)).thenReturn(2.1401518921463887)
        `when`(mathMock.sin(-12.0831853071795870)).thenReturn(0.4646021794137568)
        `when`(mathMock.cos(-12.0831853071795870)).thenReturn(0.8855195169413193)
        `when`(mathMock.tan(-12.0831853071795870)).thenReturn(0.5246662219467995)
        `when`(mathMock.cot(-12.0831853071795870)).thenReturn(1.9059736612916522)
        `when`(mathMock.sec(-12.0831853071795870)).thenReturn(1.1292805871225840)
        `when`(mathMock.csc(-12.0831853071795870)).thenReturn(2.1523790552636184)
        `when`(mathMock.sin(-12.0841852071795870)).thenReturn(0.4637165163416970)
        `when`(mathMock.cos(-12.0841852071795870)).thenReturn(0.8859836299119306)
        `when`(mathMock.tan(-12.0841852071795870)).thenReturn(0.5233917430142494)
        `when`(mathMock.cot(-12.0841852071795870)).thenReturn(1.9106147801280366)
        `when`(mathMock.sec(-12.0841852071795870)).thenReturn(1.1286890256645068)
        `when`(mathMock.csc(-12.0841852071795870)).thenReturn(2.1564899346029200)
        `when`(mathMock.sin(-12.0841853071795860)).thenReturn(0.4637164277433322)
        `when`(mathMock.cos(-12.0841853071795860)).thenReturn(0.8859836762835774)
        `when`(mathMock.tan(-12.0841853071795860)).thenReturn(0.5233916156203652)
        `when`(mathMock.cot(-12.0841853071795860)).thenReturn(1.9106152451730065)
        `when`(mathMock.sec(-12.0841853071795860)).thenReturn(1.1286889665898645)
        `when`(mathMock.csc(-12.0841853071795860)).thenReturn(2.1564903466251613)
        `when`(mathMock.sin(-12.0841854071795860)).thenReturn(0.4637163391449628)
        `when`(mathMock.cos(-12.0841854071795860)).thenReturn(0.8859837226552155)
        `when`(mathMock.tan(-12.0841854071795860)).thenReturn(0.5233914882264943)
        `when`(mathMock.cot(-12.0841854071795860)).thenReturn(1.9106157102181540)
        `when`(mathMock.sec(-12.0841854071795860)).thenReturn(1.1286889075152393)
        `when`(mathMock.csc(-12.0841854071795860)).thenReturn(2.1564907586475814)
        `when`(mathMock.sin(-12.0871853071795870)).thenReturn(0.4610563939790463)
        `when`(mathMock.cos(-12.0871853071795870)).thenReturn(0.8873708365565315)
        `when`(mathMock.tan(-12.0871853071795870)).thenReturn(0.5195757793530709)
        `when`(mathMock.cot(-12.0871853071795870)).thenReturn(1.9246470673538907)
        `when`(mathMock.sec(-12.0871853071795870)).thenReturn(1.1269245717839110)
        `when`(mathMock.csc(-12.0871853071795870)).thenReturn(2.1689320722129430)
        `when`(mathMock.log(1.6000000000000000)).thenReturn(0.4700036292457356)
        `when`(mathMock.log2(1.6000000000000000)).thenReturn(0.6780719051126378)
        `when`(mathMock.log3(1.6000000000000000)).thenReturn(0.4278157399964452)
        `when`(mathMock.log5(1.6000000000000000)).thenReturn(0.2920296742201792)
        `when`(mathMock.log10(1.6000000000000000)).thenReturn(0.2041199826559248)
        `when`(mathMock.log(1.0000001000000000)).thenReturn(0.0000000999999951)
        `when`(mathMock.log2(1.0000001000000000)).thenReturn(0.0000001442694970)
        `when`(mathMock.log3(1.0000001000000000)).thenReturn(0.0000000910239182)
        `when`(mathMock.log5(1.0000001000000000)).thenReturn(0.0000000621334904)
        `when`(mathMock.log10(1.0000001000000000)).thenReturn(0.0000000434294460)
        `when`(mathMock.log(1.0000000000000000)).thenReturn(0.0000000000000000)
        `when`(mathMock.log2(1.0000000000000000)).thenReturn(0.0000000000000000)
        `when`(mathMock.log3(1.0000000000000000)).thenReturn(0.0000000000000000)
        `when`(mathMock.log5(1.0000000000000000)).thenReturn(0.0000000000000000)
        `when`(mathMock.log10(1.0000000000000000)).thenReturn(0.0000000000000000)
        `when`(mathMock.log(0.9999999000000000)).thenReturn(-0.0000001000000049)
        `when`(mathMock.log2(0.9999999000000000)).thenReturn(-0.0000001442695112)
        `when`(mathMock.log3(0.9999999000000000)).thenReturn(-0.0000000910239272)
        `when`(mathMock.log5(0.9999999000000000)).thenReturn(-0.0000000621334965)
        `when`(mathMock.log10(0.9999999000000000)).thenReturn(-0.0000000434294503)
        `when`(mathMock.log(0.6000000000000000)).thenReturn(-0.5108256237659907)
        `when`(mathMock.log2(0.6000000000000000)).thenReturn(-0.7369655941662062)
        `when`(mathMock.log3(0.6000000000000000)).thenReturn(-0.4649735207179272)
        `when`(mathMock.log5(0.6000000000000000)).thenReturn(-0.3173938055140148)
        `when`(mathMock.log10(0.6000000000000000)).thenReturn(-0.2218487496163564)
        `when`(mathMock.log(0.4010001000000000)).thenReturn(-0.9137936022990403)
        `when`(mathMock.log2(0.4010001000000000)).thenReturn(-1.3183254984328872)
        `when`(mathMock.log3(0.4010001000000000)).thenReturn(-0.8317707818532302)
        `when`(mathMock.log5(0.4010001000000000)).thenReturn(-0.5677718880854662)
        `when`(mathMock.log10(0.4010001000000000)).thenReturn(-0.3968555190769678)
        `when`(mathMock.log(0.4010000000000000)).thenReturn(-0.9137938516755678)
        `when`(mathMock.log2(0.4010000000000000)).thenReturn(-1.3183258582071666)
        `when`(mathMock.log3(0.4010000000000000)).thenReturn(-0.8317710088455278)
        `when`(mathMock.log5(0.4010000000000000)).thenReturn(-0.5677720430318146)
        `when`(mathMock.log10(0.4010000000000000)).thenReturn(-0.3968556273798176)
        `when`(mathMock.log(0.4009999000000000)).thenReturn(-0.9137941010521575)
        `when`(mathMock.log2(0.4009999000000000)).thenReturn(-1.3183262179815360)
        `when`(mathMock.log3(0.4009999000000000)).thenReturn(-0.8317712358378819)
        `when`(mathMock.log5(0.4009999000000000)).thenReturn(-0.5677721979782017)
        `when`(mathMock.log10(0.4009999000000000)).thenReturn(-0.3968557356826944)
        `when`(mathMock.log(0.3270000000000000)).thenReturn(-1.1177951080848836)
        `when`(mathMock.log2(0.3270000000000000)).thenReturn(-1.6126374591640045)
        `when`(mathMock.log3(0.3270000000000000)).thenReturn(-1.0174609547104465)
        `when`(mathMock.log5(0.3270000000000000)).thenReturn(-0.6945251503329753)
        `when`(mathMock.log10(0.3270000000000000)).thenReturn(-0.4854522473397139)
        `when`(mathMock.log(0.3070001000000000)).thenReturn(-1.1809072056620940)
        `when`(mathMock.log2(0.3070001000000000)).thenReturn(-1.7036889693587463)
        `when`(mathMock.log3(0.3070001000000000)).thenReturn(-1.0749080615999240)
        `when`(mathMock.log5(0.3070001000000000)).thenReturn(-0.7337389013510313)
        `when`(mathMock.log10(0.3070001000000000)).thenReturn(-0.5128614830588359)
        `when`(mathMock.log(0.3070000000000000)).thenReturn(-1.1809075313949400)
        `when`(mathMock.log2(0.3070000000000000)).thenReturn(-1.7036894392919077)
        `when`(mathMock.log3(0.3070000000000000)).thenReturn(-1.0749083580947378)
        `when`(mathMock.log5(0.3070000000000000)).thenReturn(-0.7337391037402278)
        `when`(mathMock.log10(0.3070000000000000)).thenReturn(-0.5128616245228135)
        `when`(mathMock.log(0.3069999000000000)).thenReturn(-1.1809078571278920)
        `when`(mathMock.log2(0.3069999000000000)).thenReturn(-1.7036899092252222)
        `when`(mathMock.log3(0.3069999000000000)).thenReturn(-1.0749086545896480)
        `when`(mathMock.log5(0.3069999000000000)).thenReturn(-0.7337393061294902)
        `when`(mathMock.log10(0.3069999000000000)).thenReturn(-0.5128617659868371)
        `when`(mathMock.log(0.2800000000000000)).thenReturn(-1.2729656758128873)
        `when`(mathMock.log2(0.2800000000000000)).thenReturn(-1.8365012677171204)
        `when`(mathMock.log3(0.2800000000000000)).thenReturn(-1.1587032922744318)
        `when`(mathMock.log5(0.2800000000000000)).thenReturn(-0.7909380448778324)
        `when`(mathMock.log10(0.2800000000000000)).thenReturn(-0.5528419686577807)
    }

    @BeforeEach
    fun initSolver() {
        solver = ScrapSolver(mathMock)
    }

    @Test
    fun `at asymptotes`() {
        // periodic
        assertEquals(NaN, solver.solve(0.0))
        assertEquals(NaN, solver.solve(-2/PI))
        assertEquals(NaN, solver.solve(PI))
        assertEquals(NaN, solver.solve(-3/2*PI))
        assertEquals(NaN, solver.solve(0.0 - PERIOD)) // TODO fix (actual: -Infinity)
        assertEquals(NaN, solver.solve(-2/PI - PERIOD))
        assertEquals(NaN, solver.solve(PI - PERIOD))
        assertEquals(NaN, solver.solve(-2/2*PI - PERIOD))
    }

    @Test
    fun `near asymptotes`() {
        // periodic
        assertEquals(NEGATIVE_INFINITY, solver.solve(0.0     + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(-2/PI   + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(PI      + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(-3/2*PI + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(0.0     - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(-2/PI   - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(NEGATIVE_INFINITY, solver.solve(PI      - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(NEGATIVE_INFINITY, solver.solve(-3/2*PI - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(NEGATIVE_INFINITY, solver.solve(0.0     + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(-2/PI   + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(PI      + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(-3/2*PI + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(0.0     - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(POSITIVE_INFINITY, solver.solve(-2/PI   - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(NEGATIVE_INFINITY, solver.solve(PI      - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(NEGATIVE_INFINITY, solver.solve(-3/2*PI - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
    }

    @Test
    fun `at extremes`() {
        // periodic
        assertEquals(3.0529194659361445E13,     solver.solve(-0.717), MAX_ERROR)
        assertEquals(-1.4583709921831516E29,    solver.solve(-1.867), MAX_ERROR)
        assertEquals(-2.746324158962901E15,     solver.solve(-2.363), MAX_ERROR)
        assertEquals(-3.0359052276369726E20,    solver.solve(-2.637), MAX_ERROR)
        assertEquals(4.78789039114917E12,       solver.solve(-5.151), MAX_ERROR)
        assertEquals(2.2814173515074825E9,      solver.solve(-5.507), MAX_ERROR)
        assertEquals(6.656125193022193E9,       solver.solve(-5.685), MAX_ERROR)
        assertEquals(-13.759135310773415,       solver.solve(-5.797), MAX_ERROR)
        assertEquals(-12.413011870459437,       solver.solve(-5.801), MAX_ERROR)
        assertEquals(3.0529194659361445E13,     solver.solve(-0.717 - PERIOD), MAX_ERROR)
        assertEquals(-1.4583709921831516E29,    solver.solve(-1.867 - PERIOD), MAX_ERROR)
        assertEquals(-2.746324158962901E15,     solver.solve(-2.363 - PERIOD), MAX_ERROR)
        assertEquals(-3.0359052276369726E20,    solver.solve(-2.637 - PERIOD), MAX_ERROR)
        assertEquals(4.78789039114917E12,       solver.solve(-5.151 - PERIOD), MAX_ERROR)
        assertEquals(2.2814173515074825E9,      solver.solve(-5.507 - PERIOD), MAX_ERROR)
        assertEquals(6.656125193022193E9,       solver.solve(-5.685 - PERIOD), MAX_ERROR)
        assertEquals(-13.759135310773415,       solver.solve(-5.797 - PERIOD), MAX_ERROR)
        assertEquals(-12.413011870459437,       solver.solve(-5.801 - PERIOD), MAX_ERROR)
        // simple
        assertEquals(2.864676989525873E35,      solver.solve(-0.401), MAX_ERROR)
    }

    @Test
    fun `near extremes`() {
        // periodic
        assertEquals(3.0529194940501188E13,     solver.solve(-0.717 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-1.4583702097775451E29,    solver.solve(-1.867 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-2.746324168437796E15,     solver.solve(-2.363 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-3.035903697616726E20,     solver.solve(-2.637 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(4.787886328910792E12,      solver.solve(-5.151 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(2.28141735883667E9,        solver.solve(-5.507 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(6.656125083006235E9,       solver.solve(-5.685 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-13.75909462183887,        solver.solve(-5.797 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-12.413073588291374,       solver.solve(-5.801 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(3.052919437852788E13,      solver.solve(-0.717 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-1.4583717729649684E29,    solver.solve(-1.867 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-2.746324149495239E15,     solver.solve(-2.363 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-3.0359067568669655E20,    solver.solve(-2.637 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(4.78789445238783E12,       solver.solve(-5.151 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(2.28141734418101E9,        solver.solve(-5.507 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(6.656125303013066E9,       solver.solve(-5.685 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-13.759175981059713,       solver.solve(-5.797 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-12.412950158090965,       solver.solve(-5.801 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(3.0529194940501188E13,     solver.solve(-0.717 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-1.4583702097775451E29,    solver.solve(-1.867 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-2.746324168437796E15,     solver.solve(-2.363 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-3.035903697616726E20,     solver.solve(-2.637 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(4.787886328910792E12,      solver.solve(-5.151 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(2.28141735883667E9,        solver.solve(-5.507 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(6.656125083006235E9,       solver.solve(-5.685 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-13.75909462183887,        solver.solve(-5.797 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-12.413073588291374,       solver.solve(-5.801 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(3.052919437852788E13,      solver.solve(-0.717 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-1.4583717729649684E29,    solver.solve(-1.867 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-2.746324149495239E15,     solver.solve(-2.363 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-3.0359067568669655E20,    solver.solve(-2.637 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(4.78789445238783E12,       solver.solve(-5.151 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(2.28141734418101E9,        solver.solve(-5.507 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(6.656125303013066E9,       solver.solve(-5.685 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-13.759175981059713,       solver.solve(-5.797 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-12.412950158090965,       solver.solve(-5.801 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        // simple
        assertEquals(2.8647670026964496E35,     solver.solve(-0.401 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(2.864586979211049E35,      solver.solve(-0.401 - NEIGHBORHOOD_DELTA), MAX_ERROR)
    }

    @Test
    fun `x = 1 is a break`() {
        assertEquals(NaN,                   solver.solve(1.0))
        assertEquals(-5.324558406046574E-8, solver.solve(1.0 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(5.324557879502206E-8,  solver.solve(1.0 + NEIGHBORHOOD_DELTA), MAX_ERROR)
    }

    @Test
    fun `at zeroes`() {
        // periodic
        assertEquals(0.0, solver.solve(-1.864), MAX_ERROR)
        assertEquals(0.0, solver.solve(-2.643), MAX_ERROR)
        assertEquals(0.0, solver.solve(-3.720), MAX_ERROR)
        assertEquals(0.0, solver.solve(-5.145), MAX_ERROR)
        assertEquals(0.0, solver.solve(-5.801), MAX_ERROR)
        assertEquals(0.0, solver.solve(-1.864 - PERIOD), MAX_ERROR)
        assertEquals(0.0, solver.solve(-2.643 - PERIOD), MAX_ERROR)
        assertEquals(0.0, solver.solve(-3.720 - PERIOD), MAX_ERROR)
        assertEquals(0.0, solver.solve(-5.145 - PERIOD), MAX_ERROR)
        assertEquals(0.0, solver.solve(-5.801 - PERIOD), MAX_ERROR)
        // simple
        assertEquals(0.0, solver.solve(0.307), MAX_ERROR)
    }

    @Test
    fun `near zeroes`() {
        // periodic
        assertEquals(4.987869312716821E28,  solver.solve(-1.864 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(3.2513567844255375E19, solver.solve(-2.643 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-0.0789782040583914,   solver.solve(-3.720 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-3.402127664685886E11, solver.solve(-5.145 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-12.413073588291374,   solver.solve(-5.801 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(4.983871158740041E28,  solver.solve(-1.864 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(3.2547373373773E19,    solver.solve(-2.643 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-0.07890517123850473,  solver.solve(-3.720 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-3.39690983217292E11,  solver.solve(-5.145 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-12.412950158090965,   solver.solve(-5.801 - NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(4.987869312716821E28,  solver.solve(-1.864 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(3.2513567844255375E19, solver.solve(-2.643 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-0.0789782040583914,   solver.solve(-3.720 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-3.402127664685886E11, solver.solve(-5.145 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-12.413073588291374,   solver.solve(-5.801 + NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(4.983871158740041E28,  solver.solve(-1.864 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(3.2547373373773E19,    solver.solve(-2.643 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-0.07890517123850473,  solver.solve(-3.720 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-3.39690983217292E11,  solver.solve(-5.145 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        assertEquals(-12.412950158090965,   solver.solve(-5.801 - NEIGHBORHOOD_DELTA - PERIOD), MAX_ERROR)
        // simple
        assertEquals(-2.0443723047924856E-4,    solver.solve(0.307 + NEIGHBORHOOD_DELTA), MAX_ERROR)
        assertEquals(-2.0088635606996252E-4,    solver.solve(0.307 - NEIGHBORHOOD_DELTA), MAX_ERROR)
    }

    @Test
    fun `at simple points`() {
        // periodic
        assertEquals(9.467551013160646E14,      solver.solve(-0.6350), MAX_ERROR)
        assertEquals(8.396770159403462E14,      solver.solve(-0.8000), MAX_ERROR)
        assertEquals(5.087520383882573E29,      solver.solve(-1.8627), MAX_ERROR)
        assertEquals(-9.150634717349539E28,     solver.solve(-1.8651), MAX_ERROR)
        assertEquals(-5.505931951772536E28,     solver.solve(-1.8752), MAX_ERROR)
        assertEquals(-1.7364655471205607E19,    solver.solve(-2.6000), MAX_ERROR)
        assertEquals(-1.47847555394059E20,      solver.solve(-2.6416), MAX_ERROR)
        assertEquals(1.5690707198568324E21,     solver.solve(-2.6470), MAX_ERROR)
        assertEquals(-5244.307172916271,        solver.solve(-3.7070), MAX_ERROR)
        assertEquals(1.6823234512148297,        solver.solve(-3.7390), MAX_ERROR)
        assertEquals(-1.5965177547612164E13,    solver.solve(-5.1420), MAX_ERROR)
        assertEquals(3.121697415663028E12,      solver.solve(-5.1470), MAX_ERROR)
        assertEquals(2.977147179959764E12,      solver.solve(-5.1650), MAX_ERROR)
        assertEquals(3.590227679157593E9,       solver.solve(-5.6000), MAX_ERROR)
        assertEquals(3.2796271139795513E9,      solver.solve(-5.7320), MAX_ERROR)
        assertEquals(-10.617902944663737,       solver.solve(-5.7960), MAX_ERROR)
        assertEquals(-13.040691498785424,       solver.solve(-5.8000), MAX_ERROR)
        assertEquals(-355.242762584736,         solver.solve(-5.8040), MAX_ERROR)
        assertEquals(9.467551013160646E14,      solver.solve(-0.6350 - PERIOD), MAX_ERROR)
        assertEquals(8.396770159403462E14,      solver.solve(-0.8000 - PERIOD), MAX_ERROR)
        assertEquals(5.087520383882573E29,      solver.solve(-1.8627 - PERIOD), MAX_ERROR)
        assertEquals(-9.150634717349539E28,     solver.solve(-1.8651 - PERIOD), MAX_ERROR)
        assertEquals(-5.505931951772536E28,     solver.solve(-1.8752 - PERIOD), MAX_ERROR)
        assertEquals(-1.7364655471205607E19,    solver.solve(-2.6000 - PERIOD), MAX_ERROR)
        assertEquals(-1.47847555394059E20,      solver.solve(-2.6416 - PERIOD), MAX_ERROR)
        assertEquals(1.5690707198568324E21,     solver.solve(-2.6470 - PERIOD), MAX_ERROR)
        assertEquals(-5244.307172916271,        solver.solve(-3.7070 - PERIOD), MAX_ERROR)
        assertEquals(1.6823234512148297,        solver.solve(-3.7390 - PERIOD), MAX_ERROR)
        assertEquals(-1.5965177547612164E13,    solver.solve(-5.1420 - PERIOD), MAX_ERROR)
        assertEquals(3.121697415663028E12,      solver.solve(-5.1470 - PERIOD), MAX_ERROR)
        assertEquals(2.977147179959764E12,      solver.solve(-5.1650 - PERIOD), MAX_ERROR)
        assertEquals(3.590227679157593E9,       solver.solve(-5.6000 - PERIOD), MAX_ERROR)
        assertEquals(3.2796271139795513E9,      solver.solve(-5.7320 - PERIOD), MAX_ERROR)
        assertEquals(-10.617902944663737,       solver.solve(-5.7960 - PERIOD), MAX_ERROR)
        assertEquals(-13.040691498785424,       solver.solve(-5.8000 - PERIOD), MAX_ERROR)
        assertEquals(-355.242762584736,         solver.solve(-5.8040 - PERIOD), MAX_ERROR)
        // simple
        assertEquals(1.93666196215106E55,       solver.solve(-0.280), MAX_ERROR)
        assertEquals(5.527335423535138E46,      solver.solve(-0.327), MAX_ERROR)
        assertEquals(3.4165368071595088E16,     solver.solve(-0.600), MAX_ERROR)
        assertEquals(4.0085735359424125E160,    solver.solve(-1.600), MAX_ERROR)
    }
}